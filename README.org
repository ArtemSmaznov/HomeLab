#+title:       Server
#+author:      Artem Smaznov
#+description: Docker setup for my server
#+startup:     overview
#+property:    header-args :tangle docker-compose.yml
#+auto_tangle: t

* Table of Contents :toc:
- [[#usage][Usage]]
- [[#version][Version]]
- [[#volumes][Volumes]]
- [[#networks][Networks]]
- [[#secrets][Secrets]]
- [[#services][Services]]
  - [[#reverse-proxy][Reverse Proxy]]
  - [[#home][Home]]
  - [[#vpn][VPN]]
  - [[#transmission][Transmission]]
  - [[#nextcloud][Nextcloud]]
  - [[#home-assistant][Home Assistant]]
  - [[#plex][Plex]]
  - [[#anki][Anki]]
  - [[#archi-steam-farm][Archi Steam Farm]]

* Usage
Bring server up
#+begin_example shell
docker-compose up -d
#+end_example

Bring server down
#+begin_example shell
docker-compose down
#+end_example

Update images
#+begin_example shell
docker-compose build --pull
#+end_example

* Version
#+begin_src yaml
version: '3'
#+end_src

* Volumes
#+begin_src yaml
volumes:
  db:
  certs:
  acme:
  vhost.d:
  html:
#+end_src

* Networks
#+begin_src yaml
networks:
  proxy-tier:
    ipam:
      config:
        - subnet: 172.10.0.0/24
  home-assistant:
  nextcloud:
  vpn:
#+end_src

* Secrets
#+begin_src yaml
secrets:
  db_password:
    file: secrets/db_password
  db_root_password:
    file: secrets/db_root_password
  transmission_password:
    file: secrets/transmission_password
#+end_src

* Services
#+begin_src yaml
services:
#+end_src
** Reverse Proxy
*** Proxy
#+begin_src yaml
  proxy:
    build: ./proxy
    container_name: reverse-proxy
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: 'true'
    networks:
      - proxy-tier
#+end_src

*** Let's Encrypt Companion
#+begin_src yaml
  acme:
    image: nginxproxy/acme-companion
    container_name: acme
    depends_on:
      - proxy
    restart: unless-stopped
    volumes:
      - certs:/etc/nginx/certs
      - acme:/etc/acme.sh
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - DEFAULT_EMAIL=${MY_EMAIL}
    networks:
      - proxy-tier
#+end_src

** Home
#+begin_src yaml
  home:
    image: linuxserver/heimdall:latest
    container_name: home
    restart: unless-stopped
    volumes:
      - /home/heimdall:/config
    environment:
      - VIRTUAL_HOST=${HOME_HOST}
      - VIRTUAL_PORT=443
      - VIRTUAL_PROTO=https
      - LETSENCRYPT_HOST=${HOME_HOST}
      - LETSENCRYPT_EMAIL=${MY_EMAIL}
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIME_ZONE}
    networks:
      - proxy-tier
#+end_src

** VPN
#+begin_src yaml
  wireguard:
    image: linuxserver/wireguard:latest
    container_name: wireguard
    restart: unless-stopped
    ports:
      - ${VPN_PORT}:${VPN_PORT}/udp
      # transmission
      - ${TRANSMISSION_WEBUI_PORT}:${TRANSMISSION_WEBUI_PORT}/tcp
      - ${TRANSMISSION_PEER_PORT}:${TRANSMISSION_PEER_PORT}
      - ${TRANSMISSION_PEER_PORT}:${TRANSMISSION_PEER_PORT}/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=1
      - net.ipv6.conf.default.disable_ipv6=1
    cap_add:
      - NET_ADMIN
    volumes:
      - /home/wireguard:/config
      - /lib/modules:/lib/modules
    environment:
      - VIRTUAL_HOST=${TRANSMISSION_HOST}
      - VIRTUAL_PORT=${TRANSMISSION_WEBUI_PORT}
      - LETSENCRYPT_HOST=${TRANSMISSION_HOST}
      - LETSENCRYPT_EMAIL=${MY_EMAIL}
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIME_ZONE}
      - SERVERPORT=${VPN_PORT}
      # - INTERNAL_SUBNET=10.13.13.0 #optional
      - ALLOWEDIPS=0.0.0.0/0 #optional
    networks:
      - proxy-tier
      # - vpn
#+end_src

** Transmission
Still needs work on opening the peer port
#+begin_src yaml
  transmission:
    image: linuxserver/transmission:latest
    container_name: transmission
    depends_on:
      - wireguard
    restart: unless-stopped
    volumes:
      - /home/transmission/config:/config
      - /home/transmission/downloads:/downloads
      - /home/transmission/watch:/watch
    environment:
      - WEBUI_PORT=${TRANSMISSION_WEBUI_PORT}
      - PEERPORT=${TRANSMISSION_PEER_PORT}
      - USER=${MY_USERNAME}
      - FILE__PASS=/run/secrets/transmission_password
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIME_ZONE}
    secrets:
      - transmission_password
    network_mode: service:wireguard
#+end_src

** Nextcloud
*** App
#+begin_src yaml
  nextcloud-app:
    image: nextcloud:fpm-alpine
    container_name: nextcloud-app
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    restart: unless-stopped
    volumes:
      - /home/nextcloud:/var/www/html
      - /home/music:/media/music
    environment:
      - MYSQL_HOST=nextcloud-db
      - REDIS_HOST=nextcloud-redis
      - MYSQL_DATABASE=${NEXTCLOUD_DB_NAME}
      - MYSQL_USER=${NEXTCLOUD_DB_USER}
      - MYSQL_PASSWORD_FILE=/run/secrets/db_password
    secrets:
      - db_password
    networks:
      - nextcloud
#+end_src

*** Server
#+begin_src yaml
  nextcloud-server:
    build: ./nextcloud/server
    container_name: nextcloud-server
    depends_on:
      - nextcloud-app
    restart: unless-stopped
    ports:
      - ${NEXTCLOUD_LOCAL_PORT}:80
    volumes:
      - /home/nextcloud:/var/www/html:ro
    environment:
      - VIRTUAL_HOST=${NEXTCLOUD_HOST}
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=${NEXTCLOUD_HOST}
      - LETSENCRYPT_EMAIL=${MY_EMAIL}
    networks:
      - proxy-tier
      - nextcloud
#+end_src

*** Cron
#+begin_src yaml
  nextcloud-cron:
    image: nextcloud:fpm-alpine
    entrypoint: /cron.sh
    container_name: nextcloud-cron
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    restart: unless-stopped
    volumes:
      - /home/nextcloud:/var/www/html
    networks:
      - nextcloud
#+end_src

*** Database
#+begin_src yaml
  nextcloud-db:
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    container_name: nextcloud-db
    restart: unless-stopped
    volumes:
      - db:/var/lib/mysql
    environment:
      - MARIADB_AUTO_UPGRADE=1
      - MARIADB_DISABLE_UPGRADE_BACKUP=1
      - MYSQL_DATABASE=${NEXTCLOUD_DB_NAME}
      - MYSQL_USER=${NEXTCLOUD_DB_USER}
      - MYSQL_PASSWORD_FILE=/run/secrets/db_password
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db_root_password
    secrets:
      - db_password
      - db_root_password
    networks:
      - nextcloud
#+end_src

*** Redis
#+begin_src yaml
  nextcloud-redis:
    image: redis:alpine
    container_name: nextcloud-redis
    restart: unless-stopped
    networks:
      - nextcloud
#+end_src

** Home Assistant
*** App
#+begin_src yaml
  hass:
    image: ghcr.io/home-assistant/home-assistant:stable
    privileged: true
    container_name: home-assistant
    restart: unless-stopped
    ports:
      - ${HOME_ASSISTANT_LOCAL_PORT}:8123
    volumes:
      - /home/home-assistant/config:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      - VIRTUAL_HOST=${HOME_ASSISTANT_HOST}
      - VIRTUAL_PORT=8123
      - LETSENCRYPT_HOST=${HOME_ASSISTANT_HOST}
      - LETSENCRYPT_EMAIL=${MY_EMAIL}
    networks:
      - proxy-tier
      - home-assistant
#+end_src

*** Z-Wave JS UI
#+begin_src yaml
  zwave-js-ui:
    image: zwavejs/zwave-js-ui:latest
    tty: true
    container_name: zwave-js-ui
    depends_on:
      - hass
    restart: unless-stopped
    stop_signal: SIGINT
    ports:
      - 8091:8091 # port for web interface
      - 3000:3000 # port for Z-Wave JS websocket server
    volumes:
      - /home/home-assistant/zwave:/usr/src/app/store
    devices:
      - /dev/serial/by-id/usb-0658_0200-if00:/dev/zwave
    environment:
      - ZWAVEJS_EXTERNAL_CONFIG=/usr/src/app/store/.config-db
      - TZ=${TIME_ZONE}
    env_file:
      - secrets/zwave-js-ui.env
    networks:
      - home-assistant
#+end_src

** Plex
#+begin_src yaml
  plex:
    image: plexinc/pms-docker
    container_name: plex-media-server
    hostname: plex-media-server
    restart: unless-stopped
    ports:
      - ${PLEX_LOCAL_PORT}:32400/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    volumes:
      - /home/plex/config:/config
      - /home/plex/transcode:/transcode
      - /home/transmission/downloads/media:/data
      - /home/music:/data/music
    environment:
      - VIRTUAL_HOST=${PLEX_HOST}
      - VIRTUAL_PORT=32400
      - LETSENCRYPT_HOST=${PLEX_HOST}
      - LETSENCRYPT_EMAIL=${MY_EMAIL}
      - PLEX_CLAIM=
      - PLEX_UID=${UID}
      - PLEX_GID=${GID}
      - TZ=${TIME_ZONE}
    networks:
      - proxy-tier
#+end_src

** Anki
#+begin_src yaml :tangle no
  anki:
    image: kuklinistvan/anki-sync-server:latest
    container_name: anki
    restart: unless-stopped
    volumes:
      - /home/anki:/app/data
    environment:
      - VIRTUAL_HOST=${ANKI_HOST}
      - VIRTUAL_PORT=27701
      - LETSENCRYPT_HOST=${ANKI_HOST}
      - LETSENCRYPT_EMAIL=${MY_EMAIL}
    networks:
      - proxy-tier
#+end_src

** Archi Steam Farm
#+begin_src yaml
  asf:
    image: justarchi/archisteamfarm
    container_name: asf
    restart: unless-stopped
    volumes:
      - /home/asf:/app/config
    environment:
      - VIRTUAL_HOST=${ASF_HOST}
      - VIRTUAL_PORT=1242
      - LETSENCRYPT_HOST=${ASF_HOST}
      - LETSENCRYPT_EMAIL=${MY_EMAIL}
    networks:
      - proxy-tier
#+end_src
