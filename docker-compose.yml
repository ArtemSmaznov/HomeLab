version: '3'

volumes:
  db:
  certs:
  acme:
  vhost.d:
  html:

networks:
  proxy-tier:
    ipam:
      config:
        - subnet: 172.10.0.0/24
  home-assistant:
  nextcloud:
  vpn:

secrets:
  pihole_password:
    file: secrets/pihole_password
  db_password:
    file: secrets/db_password
  db_root_password:
    file: secrets/db_root_password
  transmission_password:
    file: secrets/transmission_password

services:

  proxy:
    build: ./proxy
    container_name: reverse-proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: 'true'
    networks:
      - proxy-tier

  acme:
    image: nginxproxy/acme-companion
    container_name: acme
    depends_on:
      - proxy
    restart: always
    volumes:
      - certs:/etc/nginx/certs
      - acme:/etc/acme.sh
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - DEFAULT_EMAIL=${MY_EMAIL}
    networks:
      - proxy-tier

  pi-hole:
    image: pihole/pihole:latest
    container_name: pi-hole
    hostname: pi-hole
    restart: always
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 67:67/udp
    cap_add:
      - NET_ADMIN
    volumes:
      - /home/pi-hole/etc:/etc/pihole
      - /home/pi-hole/dnsmasq.d:/etc/dnsmasq.d
    environment:
      - VIRTUAL_HOST=${PIHOLE_HOST}
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=${PIHOLE_HOST}
      - LETSENCRYPT_EMAIL=${MY_EMAIL}
      - FTLCONF_LOCAL_IPV4=${MY_SERVER_IP}
      - WEBPASSWORD_FILE=/run/secrets/pihole_password
      - PROXY_LOCATION=pi-hole
      - TZ=${TIME_ZONE}
    extra_hosts:
      # Resolve to nothing domains (terminate connection)
      - 'nw2master.bioware.com nwn2.master.gamespy.com:0.0.0.0'
      # LAN hostnames for other docker containers using nginx-proxy
      - ${HOST_1}
      - ${HOST_2}
      - ${HOST_3}
      - ${HOST_4}
      - ${HOST_5}
      - ${HOST_6}
      - ${HOST_7}
      - ${HOST_8}
      - 'pi-hole pi-hole.${MY_DOMAIN}:${MY_SERVER_IP}'
    secrets:
      - pihole_password
    networks:
      - proxy-tier
      - home-assistant

  home:
    image: linuxserver/heimdall:latest
    container_name: home
    restart: unless-stopped
    volumes:
      - /home/heimdall:/config
    environment:
      - VIRTUAL_HOST=${HOME_HOST}
      - VIRTUAL_PORT=443
      - VIRTUAL_PROTO=https
      - LETSENCRYPT_HOST=${HOME_HOST}
      - LETSENCRYPT_EMAIL=${MY_EMAIL}
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIME_ZONE}
    networks:
      - proxy-tier

  wireguard:
    image: linuxserver/wireguard:latest
    container_name: wireguard
    restart: unless-stopped
    ports:
      - ${WIREGUARD_PORT}:${WIREGUARD_PORT}/udp
      # wireguard-ui
      - ${WIREGUARD_UI_LOCAL_PORT}:5000
      # transmission
      - ${TRANSMISSION_WEBUI_PORT}:${TRANSMISSION_WEBUI_PORT}/tcp
      - ${TRANSMISSION_PEER_PORT}:${TRANSMISSION_PEER_PORT}
      - ${TRANSMISSION_PEER_PORT}:${TRANSMISSION_PEER_PORT}/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=1
      - net.ipv6.conf.default.disable_ipv6=1
    cap_add:
      - NET_ADMIN
    volumes:
      - /home/wireguard:/config
      - /lib/modules:/lib/modules
    environment:
      - VIRTUAL_HOST=${TRANSMISSION_HOST}
      - VIRTUAL_PORT=${TRANSMISSION_WEBUI_PORT}
      - LETSENCRYPT_HOST=${TRANSMISSION_HOST}
      - LETSENCRYPT_EMAIL=${MY_EMAIL}
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIME_ZONE}
      - SERVERPORT=${WIREGUARD_PORT}
      # - INTERNAL_SUBNET=10.13.13.0 #optional
      - ALLOWEDIPS=0.0.0.0/0 #optional
    networks:
      - proxy-tier
      - home-assistant
      # - vpn

  wireguard-ui:
    image: ngoduykhanh/wireguard-ui:latest
    container_name: wireguard-ui
    depends_on:
      - wireguard
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    volumes:
      - /home/wireguard:/etc/wireguard
    environment:
      - SENDGRID_API_KEY
      - EMAIL_FROM_ADDRESS
      - EMAIL_FROM_NAME
      - SESSION_SECRET
      - WGUI_USERNAME=${MY_USERNAME}
      - WG_CONF_TEMPLATE
      - WGUI_MANAGE_START=true
      - WGUI_MANAGE_RESTART=true
    env_file:
      - secrets/wireguard-ui.env
    logging:
      driver: json-file
      options:
        max-size: 50m
    network_mode: service:wireguard

  transmission:
    image: linuxserver/transmission:latest
    container_name: transmission
    depends_on:
      - wireguard
    restart: unless-stopped
    volumes:
      - /home/transmission/config:/config
      - /home/transmission/downloads:/downloads
      - /home/transmission/watch:/watch
    environment:
      - WEBUI_PORT=${TRANSMISSION_WEBUI_PORT}
      - PEERPORT=${TRANSMISSION_PEER_PORT}
      - USER=${MY_USERNAME}
      - FILE__PASS=/run/secrets/transmission_password
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIME_ZONE}
    secrets:
      - transmission_password
    network_mode: service:wireguard

  nextcloud-app:
    image: nextcloud:fpm-alpine
    container_name: nextcloud-app
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    restart: unless-stopped
    volumes:
      - /home/nextcloud:/var/www/html
      - /home/music:/media/music
    environment:
      - MYSQL_HOST=nextcloud-db
      - REDIS_HOST=nextcloud-redis
      - MYSQL_DATABASE=${NEXTCLOUD_DB_NAME}
      - MYSQL_USER=${NEXTCLOUD_DB_USER}
      - MYSQL_PASSWORD_FILE=/run/secrets/db_password
    secrets:
      - db_password
    networks:
      - nextcloud

  nextcloud-server:
    build: ./nextcloud/server
    container_name: nextcloud-server
    hostname: nextcloud
    depends_on:
      - nextcloud-app
    restart: unless-stopped
    ports:
      - ${NEXTCLOUD_LOCAL_PORT}:80
    volumes:
      - /home/nextcloud:/var/www/html:ro
    environment:
      - VIRTUAL_HOST=${NEXTCLOUD_HOST}
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=${NEXTCLOUD_HOST}
      - LETSENCRYPT_EMAIL=${MY_EMAIL}
    networks:
      - proxy-tier
      - nextcloud
      - home-assistant

  nextcloud-cron:
    image: nextcloud:fpm-alpine
    entrypoint: /cron.sh
    container_name: nextcloud-cron
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    restart: unless-stopped
    volumes:
      - /home/nextcloud:/var/www/html
    networks:
      - nextcloud

  nextcloud-db:
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    container_name: nextcloud-db
    restart: unless-stopped
    volumes:
      - db:/var/lib/mysql
    environment:
      - MARIADB_AUTO_UPGRADE=1
      - MARIADB_DISABLE_UPGRADE_BACKUP=1
      - MYSQL_DATABASE=${NEXTCLOUD_DB_NAME}
      - MYSQL_USER=${NEXTCLOUD_DB_USER}
      - MYSQL_PASSWORD_FILE=/run/secrets/db_password
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db_root_password
    secrets:
      - db_password
      - db_root_password
    networks:
      - nextcloud

  nextcloud-redis:
    image: redis:alpine
    container_name: nextcloud-redis
    restart: unless-stopped
    networks:
      - nextcloud

  hass:
    image: ghcr.io/home-assistant/home-assistant:stable
    privileged: true
    container_name: home-assistant
    restart: unless-stopped
    ports:
      - ${HOME_ASSISTANT_LOCAL_PORT}:8123
    volumes:
      - /home/home-assistant/config:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      - VIRTUAL_HOST=${HOME_ASSISTANT_HOST}
      - VIRTUAL_PORT=8123
      - LETSENCRYPT_HOST=${HOME_ASSISTANT_HOST}
      - LETSENCRYPT_EMAIL=${MY_EMAIL}
    networks:
      - proxy-tier
      - home-assistant

  zwave-js-ui:
    image: zwavejs/zwave-js-ui:latest
    tty: true
    container_name: zwave-js-ui
    depends_on:
      - hass
    restart: unless-stopped
    stop_signal: SIGINT
    ports:
      - 3000:3000 # port for Z-Wave JS websocket server
    volumes:
      - /home/home-assistant/zwave:/usr/src/app/store
    devices:
      - /dev/serial/by-id/usb-0658_0200-if00:/dev/zwave
    environment:
      - VIRTUAL_HOST=${ZWAVE_JS_HOST}
      - VIRTUAL_PORT=8091
      - LETSENCRYPT_HOST=${ZWAVE_JS_HOST}
      - LETSENCRYPT_EMAIL=${MY_EMAIL}
      - ZWAVEJS_EXTERNAL_CONFIG=/usr/src/app/store/.config-db
      - TZ=${TIME_ZONE}
    env_file:
      - secrets/zwave-js-ui.env
    networks:
      - home-assistant
      - proxy-tier

  piper:
    image: rhasspy/wyoming-piper
    container_name: piper
    depends_on:
      - hass
    restart: unless-stopped
    ports:
      - 10200:10200
    volumes:
      - /home/home-assistant/wyoming-piper:/data
    command: --voice=en_US-lessac-medium
    networks:
      - home-assistant

  whisper:
    image: rhasspy/wyoming-whisper
    container_name: whisper
    depends_on:
      - hass
    restart: unless-stopped
    ports:
      - 10300:10300
    volumes:
      - /home/home-assistant/wyoming-whisper:/data
    command: --model=small --language=en
    networks:
      - home-assistant

  plex:
    image: plexinc/pms-docker
    container_name: plex-media-server
    hostname: plex-media-server
    restart: unless-stopped
    ports:
      - ${PLEX_LOCAL_PORT}:32400/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    volumes:
      - /home/plex/config:/config
      - /home/plex/transcode:/transcode
      - /home/transmission/downloads/media:/data
      - /home/music:/data/music
    environment:
      - VIRTUAL_HOST=${PLEX_HOST}
      - VIRTUAL_PORT=32400
      - LETSENCRYPT_HOST=${PLEX_HOST}
      - LETSENCRYPT_EMAIL=${MY_EMAIL}
      - PLEX_CLAIM=
      - PLEX_UID=${UID}
      - PLEX_GID=${GID}
      - TZ=${TIME_ZONE}
    networks:
      - proxy-tier
      - home-assistant

  asf:
    image: justarchi/archisteamfarm
    container_name: asf
    restart: unless-stopped
    volumes:
      - /home/asf:/app/config
    environment:
      - VIRTUAL_HOST=${ASF_HOST}
      - VIRTUAL_PORT=1242
      - LETSENCRYPT_HOST=${ASF_HOST}
      - LETSENCRYPT_EMAIL=${MY_EMAIL}
    networks:
      - proxy-tier
